{"version":3,"file":"static/js/912.cad096fb.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","utils/availableContact.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/ContactItem.jsx/ContactItem.styled.js","components/ContactItem.jsx/ContactItem.jsx","components/ContactList/ContactList.jsx","utils/getVisabylityContacts.js","components/GlobalStyle.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleApp = styled.h1`\n  margin-bottom: 10px;\n  color: #e0f2f1;\n  font-size: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  margin-bottom: 10px;\n  margin-top: 20px;\n  color: #e0f2f1;\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const FormContact = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr 150px 2fr;\n  gap: 10px;\n`;\nexport const FormLable = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  color: #f2f7fd;\n`;\n\nexport const FormInput = styled.input`\n  padding: 8px 16px;\n  font-size: 16px;\n  border-color: transparent;\n  background-color: #009688;\n  color: #e0f2f1;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px rgba(66, 66, 66, 0.62);\n  text-shadow: 0px 0px 5px rgba(66, 66, 66, 0.75);\n  &:focus {\n    outline: none;\n    border: 2px solid #506874;\n  }\n`;\n\nexport const FormSubmitButton = styled.button`\n  margin-top: auto;\n\n  width: 39px;\n  height: 39px;\n  border-radius: 50%;\n  background-color: #009688;\n  border: none;\n  cursor: pointer;\n  text-align: center;\n  color: #506874;\n  font-weight: 400;\n  font-size: 32px;\n  box-shadow: 0px 0px 5px rgba(66, 66, 66, 0.62);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #e0f2f1;\n    background-color: #004d40;\n  }\n`;\n","export const selectContacts = state => state.items.contacts;\nexport const selectStatusFilter = state => state.items.filter;\nexport const selectLoaderStatus = state => state.items.isLoading;\n\n","import { useState } from 'react';\nimport { availableContact } from 'utils/availableContact';\nimport {\n  FormContact,\n  FormLable,\n  FormInput,\n  FormSubmitButton,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { AccordionContainer } from 'components/Navigation/Navigation.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (availableContact(contacts, name)) {\n      alert(`${name} is alredy in contact`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <AccordionContainer>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>Add Contact</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <FormContact onSubmit={handleSubmit}>\n          <FormLable>\n            Name\n            <FormInput\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={e => setName(e.target.value)}\n            />\n          </FormLable>\n          <FormLable>\n            Number\n            <FormInput\n              label=\"Number\"\n              type=\"tel\"\n              name=\"phone\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={e => setNumber(e.target.value)}\n            />\n          </FormLable>\n          <FormSubmitButton type=\"submit\">+</FormSubmitButton>\n        </FormContact>\n      </AccordionDetails>\n    </AccordionContainer>\n  );\n};\n","export const availableContact = (contacts, contact) => {\n  const nameNormalize = contact.toLowerCase();\n  const findName = contacts.filter(\n    el => nameNormalize === el.name.toLowerCase()\n  );\n\n  return findName.length === 0 ? null : contact;\n};\n","import { FormInput } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { findContact } from 'redux/contacts/contactsSlice';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { AccordionContainer } from 'components/Navigation/Navigation.styled';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const target = e.currentTarget;\n    dispatch(findContact(target.value));\n  };\n\n  return (\n    <AccordionContainer>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>Find contacts by name</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n\n          <FormInput type=\"text\" onChange={e => handleFilter(e)} />\n\n      </AccordionDetails>\n    </AccordionContainer>\n  );\n};\n","import { ProgressBar } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n      <ProgressBar\n        height=\"120\"\n        width=\"480\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#f2f7fd75\"\n        barColor=\"#405058fd\"\n      />\n    );\n}\n\n","import styled from 'styled-components';\n\nexport const ContactItems = styled.li`\n  color: #f2f7fd;\n  margin-bottom: 8px;\n  padding: 8px 32px;\n  background-color: #00695c;\n  display: flex;\n  border-radius: 4px;\n  max-width: 30%;\n  align-items: center;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #445760a3;\n  }\n`;\n\nexport const ContactItemContainerText = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  flex-grow: 1;\n`;\n\nexport const ContactText = styled.span`\n  margin-right: 5px;\n\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.18;\n  letter-spacing: 0.07em;\n\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 1;\n  grid-row-end: 2;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 5px;\n\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 2;\n  grid-row-end: 2;\n`;\n\n// export const ContactButtonDelet = styled.button`\n//   margin-right: 5px;\n//   margin-left: auto;\n//   cursor: pointer;\n//   color: red;\n//   border: none;\n//   background: transparent;\n\n//   font-size: 20px;\n//   font-weight: 700;\n//   line-height: 1.18;\n//   letter-spacing: 0.07em;\n\n//   grid-column-start: 2;\n//   grid-column-end: 3;\n//   grid-row-start: 1;\n//   grid-row-end: 3;\n// `;\n\n\n","import {\n  ContactItems,\n  ContactText,\n  ContactNumber,\n  ContactItemContainerText,\n} from './ContactItem.styled';\nimport { ContactButtonDelet } from 'components/Navigation/Navigation.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItems>\n      <ContactItemContainerText>\n        <ContactText>{name} </ContactText>\n        <ContactNumber>{number}</ContactNumber>\n      </ContactItemContainerText>\n\n      <ContactButtonDelet\n        aria-label=\"delete\"\n        size=\"large\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <DeleteIcon fontSize=\"inherit\" />\n      </ContactButtonDelet>\n    </ContactItems>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Box } from 'Box';\nimport { ContactItem } from 'components/ContactItem.jsx/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectStatusFilter } from 'redux/contacts/selectors';\nimport { getVisibleContacts } from 'utils/getVisabylityContacts';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const statusFilter = useSelector(selectStatusFilter);\n  const visibleContacts = getVisibleContacts(contacts, statusFilter);\n\n  return (\n    <Box as=\"ul\" p={0} mt={4} mb={4}>\n      {visibleContacts.map(el => {\n        const { id, name, number } = el;\n        return <ContactItem key={id} id={id} name={name} number={number} />;\n      })}\n    </Box>\n  );\n};\n","export const getVisibleContacts = (contacts, statusFilter) => {\n  if (!statusFilter) {\n    return contacts;\n  }\n  const normalizateName = statusFilter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizateName)\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\n// import 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  h1,h2,h3,h4,h5,h6,p {\n    margin: 0;\n  }\n  /* ul {\n    list-style: none;\n    margin: 0;\n    padding: 0; \n  } */\n`;\n","import { TitleApp } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { TitleContacts } from 'components/App/App.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { GlobalStyle } from 'components/GlobalStyle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { selectLoaderStatus } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoaderStatus);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <TitleApp>Phonebook</TitleApp>\n      <ContactForm />\n      <TitleContacts>Contacts</TitleContacts>\n      <Filter />\n      {isLoading ? <Loader /> : <ContactList />}\n      <GlobalStyle />\n    </>\n  );\n};\n"],"names":["TitleApp","styled","TitleContacts","FormContact","FormLable","FormInput","FormSubmitButton","selectContacts","state","items","contacts","selectStatusFilter","filter","selectLoaderStatus","isLoading","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","AccordionSummary","expandIcon","ExpandMore","id","Typography","AccordionDetails","onSubmit","e","preventDefault","contact","nameNormalize","toLowerCase","el","length","availableContact","alert","addContact","label","type","value","pattern","title","required","onChange","target","Filter","currentTarget","findContact","handleFilter","Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","ContactItems","ContactItemContainerText","ContactText","ContactNumber","ContactItem","size","onClick","deleteContact","Delete","fontSize","ContactList","visibleContacts","statusFilter","normalizateName","includes","getVisibleContacts","Box","as","p","mt","mb","map","GlobalStyle","createGlobalStyle","Contacts","useEffect","fetchContacts"],"sourceRoot":""}